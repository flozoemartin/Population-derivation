********************************************************************************

* Exclude episodes that are likely to be derived from historical data. These are pregnancies consistent with problem 4 of the outcome unknown section and problem 1 of the conflicting pregnancies section in JC's BMJ paper on uncertain pregnancy episodes in CPRD Gold pregnancy register

* Author: Paul Madley-Dowd (adapted for antidepressant project by Flo Martin)

* Date started: 04/08/2022

********************************************************************************

* Datasets generated by this do-file

	* $Datadir\derived_data\Hist_Conflict.dta

********************************************************************************

/* Identify for outcome unknown

	For outcome unknown, we have already excluded pregnancies recorded in the 365 days following GP registration, as these are more likely to be historical.
	
	Problem 4 	- The pregnancy record belongs to another pregnancy episode in the Register
	
	Solution 	- Append the pregnancy with outcome unknown onto the previous pregnancy and bring the start date forward
	
	Scenario 4d - A code recorded relating to the patient's delivery history is incorrectly identified by the algorithm as a delivery, uncovering records at the end.
		
		- 1 The woman must have >1 episode in the pregnancy register
		- 2 The pregend* date for the episode with missing outcome had to be <=175 days (25 weeks) after the pregend* for the previous episode
		
*/

	use "$Datadir\formatted_linked_data\pregnancyregister.dta", clear
	merge 1:1 patid pregid using "$Tempdatadir\pregreg_prehistoricalpregstep.dta", update replace keep(1 3 4 5) keepusing(pregstart_num pregend_num outcome)
	
	order patid pregid pregstart_num pregend_num
	sort patid pregend_num pregstart_num
	
	foreach var in pregid pregstart_num pregend_num outcome { // generate variables from previous row for first pregnancy and rename current row for second pregnancy
		
		tostring `var', gen(str_`var') force format(%13.0g)
		gen p1_`var' = str_`var'[_n-1]
		destring p1_`var', replace
		rename `var' p2_`var'
		
	}
	
	format %d p1_pregstart_num p1_pregend_num
	format %12.0g p1_pregid
	duplicates tag p1_pregid, gen(_dupp1pregid)
	drop if _dupp1pregid>0
	assert _dupp1pregid==0
	
	by patid: keep if _n > 1 // Keep all rowas after the first one for each mother ID (data now stored on a subsequent row) - this will remove all women with one pregnancy in the register only
	
	recode p1_outcome (4/10 = 1) (1/3 11 12 = 2) (13 = 3), gen(p1_outcome_rc)
	recode p2_outcome (4/10 = 1) (1/3 11 12 = 2) (13 = 3), gen(p2_outcome_rc)
	label define lb_outrc 1"Loss" 2"Delivery" 3"Missing"
	label values p1_outcome_rc p2_outcome_rc lb_outrc
	
* Identify pregnancies where the pregend date for the episode with missing outcome is <=175 days (25 weeks) after the pregend for the previous episode

	count if (p2_pregend_num <= (p1_pregend_num + 175)) & p2_outcome_rc==3 // n = 129,015
	gen Hist_Misout = 1 if (p2_pregend_num <= (p1_pregend_num + 175)) & p2_outcome_rc==3
	keep if Hist_Misout == 1 
	
	keep patid p1_pregid p2_pregid p1_outcome p2_outcome Hist_Misout
	
	save "$Datadir\derived_data\Hist_Misout.dta", replace
	
********************************************************************************

* Prepare dataset for conflicting episodes - one row per conflicting pregnancy - ordered on pregnancy end - need to add endadj back in when I have it

	use "$Tempdatadir\pregreg_prehistoricalpregstep.dta", clear
	keep patid pregid
	merge 1:1 patid pregid using "$Datadir\formatted_linked_data\pregnancyregister.dta", keep(3) nogen
	
	order patid pregid pregstart_num pregend_num
	
	foreach var in pregid pregstart_num pregend_num outcome endadj firstantenatal_num gestdays { // generate variables from previous row for first pregnancy and rename current row for second pregnancy
		
		tostring `var', gen(str_`var') force format(%13.0g)
		gen p1_`var' = str_`var'[_n-1]
		destring p1_`var', replace
		rename `var' p2_`var'
		
	}
	
	gen p1_firstantenatal = firstantenatal[_n-1]
	destring p1_firstantenatal, replace
	rename firstantenatal p2_firstantenatal
	
	format %d p1_pregstart_num p1_pregend_num
	format %13.0g p1_pregid
	
	duplicates tag p1_pregid, gen(_dupp1pregid)
	drop if _dupp1pregid>0
	assert _dupp1pregid==0	
	
	by patid: keep if _n > 1 // Keep all rows after the first one for each mother ID (data now stored on a subsequent row)	
	
	keep if (p2_pregstart_num <= p1_pregend_num & p1_pregend_num <= p2_pregend_num) // keeping overlapping pregnancies (as previously sorted on pregend, pregend of the first pregnancy must fall between the window of pregnancy start and end of second pregnancy)
	
	recode p1_outcome (4/10 = 1) (1/3 11 12 = 2) (13 = 3), gen(p1_outcome_rc)
	recode p2_outcome (4/10 = 1) (1/3 11 12 = 2) (13 = 3), gen(p2_outcome_rc)
	label define lb_outrc 1"Loss" 2"Delivery" 3"Missing"
	label values p1_outcome_rc p2_outcome_rc lb_outrc
	
	gen outcome_combo = 1 if p1_outcome_rc==1 & p2_outcome_rc==1 // Generate combination variable for outcomes (earliest pregnancy - labelled as prev - comes first) using appendix 12 of BMJ paper by Jenny Campbell
	replace outcome_combo = 2 if p1_outcome_rc==1 & p2_outcome_rc==2
	replace outcome_combo = 3 if p1_outcome_rc==1 & p2_outcome_rc==3
	replace outcome_combo = 4 if p1_outcome_rc==2 & p2_outcome_rc==2
	replace outcome_combo = 5 if p1_outcome_rc==2 & p2_outcome_rc==3
	replace outcome_combo = 6 if p1_outcome_rc==3 & p2_outcome_rc==3
	
	label define lb_outcombo 1"Loss - loss" 2"Loss - delivery" 3"Loss - unknown" 4"Delivery - delivery" 5"Delivery - unknown" 6"Unknown - unknown"
	label values outcome_combo lb_outcombo
	
	keep patid p1* p2* outcome_combo pregnumber
	order patid p1* p2*
	
	save "$Tempdatadir\pregconflicts_pregendsort.dta", replace
	
********************************************************************************

/* Identify for conflicting pregnancies

	Problem 1 - Both pregnancies are true but one is a current pregnancy and one is a historical pregnancy
	
	Solution - Drop first episode, retain second episode (ensure the pregnancies are ordered on pregnancy end)
	
	Scenario 1a - The GP records a past delivery or loss during a current pregnancy with the same outcome resulting in another episode being created
	
		- 1 Outcome combination of the two episodes must be delivery - delivery or loss - loss
		- 2 The second episode had an antenatal code from a list deemed likely to only be recorded if the patient was currently pregnant (codelist READ_currently_pregnant_codes_JCAMPBELL)
		
	Scenario 1b - A patient has a record relating to a loss recorded during a pregnancy ending in delivery or vice-versa. Conflicting episodes are generated by the algorithm
		
		- 1 The outcome combination of the two episodes must be delivery - loss or loss - delivery
		- 2 The second episode had an antenatal code from a list deemed likely to only be recorded in the patient was currently pregnant (codelist READ_currently_pregnant_codes_JCAMPBELL)
		
*/

* Scenario 1a and 1b

	use "$Tempdatadir\pregconflicts_pregendsort.dta", clear
	
	by patid: egen _seq = seq()
	summ _seq // n = 14,270
	local max = r(max)
	
	forvalues i = 1/`max' {
		
		disp `i'
		preserve
		
		keep if _seq==`i'
		merge 1:m patid using "$Tempdatadir\pregreg_conflicts_currentlypregnantevents.dta", nogen keep(3)
		keep if p2_pregstart_num <= eventdate_num & eventdate_num <= p2_pregend_num
		
		gen Hist_Conflict_1a = 1 if inlist(outcome_combo, 1, 4) // delivery - delivery or loss - loss
		gen Hist_Conflict_1b = 1 if inlist(outcome_combo, 2, 7) // delivery - loss or loss - delivery
		
		keep patid p1_pregid p2_pregid Hist_Conflict_*
		
		duplicates drop
		
		save "$Tempdatadir\Hist_Conflict_`i'.dta", replace
		
		restore
	
	}
	
* Append datasets together

	use "$Tempdatadir\Hist_Conflict_1.dta", clear
	
	forvalues i = 2/`max' {
		
		append using "$Tempdatadir\Hist_Conflict_`i'.dta"
		
	}
	
	save "$Datadir\derived_data\Hist_Conflict.dta", replace
	
********************************************************************************
